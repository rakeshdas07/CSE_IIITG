{"ast":null,"code":"var _jsxFileName = \"/home/nish/Documents/hostel-mess-management-system/hostel-mess-management-system/src/components/StudentDashboard/NoticeBoard.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { getNotices } from '../../services/api';\nimport './NoticeBoard.css'; // Import CSS for styling (if exists)\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NoticeBoard = () => {\n  _s();\n  const [notices, setNotices] = useState([]);\n  const [error, setError] = useState(null); // State to store error messages\n  const [loading, setLoading] = useState(true); // State to manage loading state\n\n  useEffect(() => {\n    const fetchNotices = async () => {\n      try {\n        const data = await getNotices();\n        setNotices(data);\n      } catch (err) {\n        setError('Failed to fetch notices. Please try again later.'); // Handle errors\n      } finally {\n        setLoading(false); // Set loading to false after fetching data\n      }\n    };\n    fetchNotices();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"notice-board\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Notice Board\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading notices...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 19\n    }, this), \" \", error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 17\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: notices.length > 0 ? notices.map((notice, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: notice.message\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No notices available.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this) // Message when no notices are found\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_s(NoticeBoard, \"W1/l/1P4Le9E2mLJ8Pwq7pkFXiY=\");\n_c = NoticeBoard;\nexport default NoticeBoard;\nvar _c;\n$RefreshReg$(_c, \"NoticeBoard\");","map":{"version":3,"names":["React","useEffect","useState","getNotices","jsxDEV","_jsxDEV","NoticeBoard","_s","notices","setNotices","error","setError","loading","setLoading","fetchNotices","data","err","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","notice","index","message","_c","$RefreshReg$"],"sources":["/home/nish/Documents/hostel-mess-management-system/hostel-mess-management-system/src/components/StudentDashboard/NoticeBoard.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { getNotices } from '../../services/api';\nimport './NoticeBoard.css'; // Import CSS for styling (if exists)\n\nconst NoticeBoard = () => {\n  const [notices, setNotices] = useState([]);\n  const [error, setError] = useState(null); // State to store error messages\n  const [loading, setLoading] = useState(true); // State to manage loading state\n\n  useEffect(() => {\n    const fetchNotices = async () => {\n      try {\n        const data = await getNotices();\n        setNotices(data);\n      } catch (err) {\n        setError('Failed to fetch notices. Please try again later.'); // Handle errors\n      } finally {\n        setLoading(false); // Set loading to false after fetching data\n      }\n    };\n\n    fetchNotices();\n  }, []);\n\n  return (\n    <div className=\"notice-board\">\n      <h2>Notice Board</h2>\n      {loading && <p>Loading notices...</p>} {/* Display loading state */}\n      {error && <p className=\"error-message\">{error}</p>} {/* Display error message */}\n      <ul>\n        {notices.length > 0 ? (\n          notices.map((notice, index) => (\n            <li key={index}>{notice.message}</li>\n          ))\n        ) : (\n          <p>No notices available.</p> // Message when no notices are found\n        )}\n      </ul>\n    </div>\n  );\n};\n\nexport default NoticeBoard;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,UAAU,QAAQ,oBAAoB;AAC/C,OAAO,mBAAmB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE5B,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACQ,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;EAC1C,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;;EAE9CD,SAAS,CAAC,MAAM;IACd,MAAMa,YAAY,GAAG,MAAAA,CAAA,KAAY;MAC/B,IAAI;QACF,MAAMC,IAAI,GAAG,MAAMZ,UAAU,CAAC,CAAC;QAC/BM,UAAU,CAACM,IAAI,CAAC;MAClB,CAAC,CAAC,OAAOC,GAAG,EAAE;QACZL,QAAQ,CAAC,kDAAkD,CAAC,CAAC,CAAC;MAChE,CAAC,SAAS;QACRE,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC;MACrB;IACF,CAAC;IAEDC,YAAY,CAAC,CAAC;EAChB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACET,OAAA;IAAKY,SAAS,EAAC,cAAc;IAAAC,QAAA,gBAC3Bb,OAAA;MAAAa,QAAA,EAAI;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACpBV,OAAO,iBAAIP,OAAA;MAAAa,QAAA,EAAG;IAAkB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,EAAC,GAAC,EACtCZ,KAAK,iBAAIL,OAAA;MAAGY,SAAS,EAAC,eAAe;MAAAC,QAAA,EAAER;IAAK;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAAC,GAAC,eACpDjB,OAAA;MAAAa,QAAA,EACGV,OAAO,CAACe,MAAM,GAAG,CAAC,GACjBf,OAAO,CAACgB,GAAG,CAAC,CAACC,MAAM,EAAEC,KAAK,kBACxBrB,OAAA;QAAAa,QAAA,EAAiBO,MAAM,CAACE;MAAO,GAAtBD,KAAK;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAsB,CACrC,CAAC,gBAEFjB,OAAA;QAAAa,QAAA,EAAG;MAAqB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,CAAC;IAC9B;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV,CAAC;AAACf,EAAA,CApCID,WAAW;AAAAsB,EAAA,GAAXtB,WAAW;AAsCjB,eAAeA,WAAW;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}