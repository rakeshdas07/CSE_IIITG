{"ast":null,"code":"// src/services/api.js\nimport axios from 'axios';\nconst API_BASE_URL = 'https://your-api-endpoint.com/api'; // Replace with your actual API base URL\n\n// Create an instance of axios\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  timeout: 10000 // Set a timeout for requests\n});\n\n// Intercept requests to add headers if necessary\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token'); // Example: get token from local storage\n  if (token) {\n    config.headers['Authorization'] = `Bearer ${token}`; // Set authorization header\n  }\n  return config;\n}, error => {\n  return Promise.reject(error); // Handle request errors\n});\n\n// Function to fetch data from an endpoint\nexport const fetchData = async endpoint => {\n  try {\n    const response = await api.get(endpoint);\n    return response.data; // Return the data\n  } catch (error) {\n    console.error(`Error fetching data from ${endpoint}:`, error);\n    throw error; // Handle errors appropriately\n  }\n};\n\n// Function to post data to an endpoint\nexport const postData = async (endpoint, data) => {\n  try {\n    const response = await api.post(endpoint, data);\n    return response.data; // Return the data\n  } catch (error) {\n    console.error(`Error posting data to ${endpoint}:`, error);\n    throw error; // Handle errors appropriately\n  }\n};\n\n// Add more API functions as needed\n\n// Function to update data (example)\nexport const updateData = async (endpoint, data) => {\n  try {\n    const response = await api.put(endpoint, data);\n    return response.data; // Return the data\n  } catch (error) {\n    console.error(`Error updating data at ${endpoint}:`, error);\n    throw error; // Handle errors appropriately\n  }\n};\n\n// Function to delete data (example)\nexport const deleteData = async endpoint => {\n  try {\n    const response = await api.delete(endpoint);\n    return response.data; // Return the data\n  } catch (error) {\n    console.error(`Error deleting data at ${endpoint}:`, error);\n    throw error; // Handle errors appropriately\n  }\n};\n\n// New function to delete meal plan by ID\nexport const deleteMealPlan = async id => {\n  return await deleteData(`/mealplans/${id}`); // Adjust the endpoint as per your API structure\n};\n\n// You can add other functions for fetching and updating meal plans here...","map":{"version":3,"names":["axios","API_BASE_URL","api","create","baseURL","timeout","interceptors","request","use","config","token","localStorage","getItem","headers","error","Promise","reject","fetchData","endpoint","response","get","data","console","postData","post","updateData","put","deleteData","delete","deleteMealPlan","id"],"sources":["/home/nish/Documents/hostel-mess-management-system/hostel-mess-management-system/src/services/api.js"],"sourcesContent":["// src/services/api.js\nimport axios from 'axios';\n\nconst API_BASE_URL = 'https://your-api-endpoint.com/api'; // Replace with your actual API base URL\n\n// Create an instance of axios\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  timeout: 10000, // Set a timeout for requests\n});\n\n// Intercept requests to add headers if necessary\napi.interceptors.request.use((config) => {\n  const token = localStorage.getItem('token'); // Example: get token from local storage\n  if (token) {\n    config.headers['Authorization'] = `Bearer ${token}`; // Set authorization header\n  }\n  return config;\n}, (error) => {\n  return Promise.reject(error); // Handle request errors\n});\n\n// Function to fetch data from an endpoint\nexport const fetchData = async (endpoint) => {\n  try {\n    const response = await api.get(endpoint);\n    return response.data; // Return the data\n  } catch (error) {\n    console.error(`Error fetching data from ${endpoint}:`, error);\n    throw error; // Handle errors appropriately\n  }\n};\n\n// Function to post data to an endpoint\nexport const postData = async (endpoint, data) => {\n  try {\n    const response = await api.post(endpoint, data);\n    return response.data; // Return the data\n  } catch (error) {\n    console.error(`Error posting data to ${endpoint}:`, error);\n    throw error; // Handle errors appropriately\n  }\n};\n\n// Add more API functions as needed\n\n// Function to update data (example)\nexport const updateData = async (endpoint, data) => {\n  try {\n    const response = await api.put(endpoint, data);\n    return response.data; // Return the data\n  } catch (error) {\n    console.error(`Error updating data at ${endpoint}:`, error);\n    throw error; // Handle errors appropriately\n  }\n};\n\n// Function to delete data (example)\nexport const deleteData = async (endpoint) => {\n  try {\n    const response = await api.delete(endpoint);\n    return response.data; // Return the data\n  } catch (error) {\n    console.error(`Error deleting data at ${endpoint}:`, error);\n    throw error; // Handle errors appropriately\n  }\n};\n\n// New function to delete meal plan by ID\nexport const deleteMealPlan = async (id) => {\n  return await deleteData(`/mealplans/${id}`); // Adjust the endpoint as per your API structure\n};\n\n// You can add other functions for fetching and updating meal plans here...\n"],"mappings":"AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,YAAY,GAAG,mCAAmC,CAAC,CAAC;;AAE1D;AACA,MAAMC,GAAG,GAAGF,KAAK,CAACG,MAAM,CAAC;EACvBC,OAAO,EAAEH,YAAY;EACrBI,OAAO,EAAE,KAAK,CAAE;AAClB,CAAC,CAAC;;AAEF;AACAH,GAAG,CAACI,YAAY,CAACC,OAAO,CAACC,GAAG,CAAEC,MAAM,IAAK;EACvC,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC;EAC7C,IAAIF,KAAK,EAAE;IACTD,MAAM,CAACI,OAAO,CAAC,eAAe,CAAC,GAAG,UAAUH,KAAK,EAAE,CAAC,CAAC;EACvD;EACA,OAAOD,MAAM;AACf,CAAC,EAAGK,KAAK,IAAK;EACZ,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC,CAAC,CAAC;AAChC,CAAC,CAAC;;AAEF;AACA,OAAO,MAAMG,SAAS,GAAG,MAAOC,QAAQ,IAAK;EAC3C,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMjB,GAAG,CAACkB,GAAG,CAACF,QAAQ,CAAC;IACxC,OAAOC,QAAQ,CAACE,IAAI,CAAC,CAAC;EACxB,CAAC,CAAC,OAAOP,KAAK,EAAE;IACdQ,OAAO,CAACR,KAAK,CAAC,4BAA4BI,QAAQ,GAAG,EAAEJ,KAAK,CAAC;IAC7D,MAAMA,KAAK,CAAC,CAAC;EACf;AACF,CAAC;;AAED;AACA,OAAO,MAAMS,QAAQ,GAAG,MAAAA,CAAOL,QAAQ,EAAEG,IAAI,KAAK;EAChD,IAAI;IACF,MAAMF,QAAQ,GAAG,MAAMjB,GAAG,CAACsB,IAAI,CAACN,QAAQ,EAAEG,IAAI,CAAC;IAC/C,OAAOF,QAAQ,CAACE,IAAI,CAAC,CAAC;EACxB,CAAC,CAAC,OAAOP,KAAK,EAAE;IACdQ,OAAO,CAACR,KAAK,CAAC,yBAAyBI,QAAQ,GAAG,EAAEJ,KAAK,CAAC;IAC1D,MAAMA,KAAK,CAAC,CAAC;EACf;AACF,CAAC;;AAED;;AAEA;AACA,OAAO,MAAMW,UAAU,GAAG,MAAAA,CAAOP,QAAQ,EAAEG,IAAI,KAAK;EAClD,IAAI;IACF,MAAMF,QAAQ,GAAG,MAAMjB,GAAG,CAACwB,GAAG,CAACR,QAAQ,EAAEG,IAAI,CAAC;IAC9C,OAAOF,QAAQ,CAACE,IAAI,CAAC,CAAC;EACxB,CAAC,CAAC,OAAOP,KAAK,EAAE;IACdQ,OAAO,CAACR,KAAK,CAAC,0BAA0BI,QAAQ,GAAG,EAAEJ,KAAK,CAAC;IAC3D,MAAMA,KAAK,CAAC,CAAC;EACf;AACF,CAAC;;AAED;AACA,OAAO,MAAMa,UAAU,GAAG,MAAOT,QAAQ,IAAK;EAC5C,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMjB,GAAG,CAAC0B,MAAM,CAACV,QAAQ,CAAC;IAC3C,OAAOC,QAAQ,CAACE,IAAI,CAAC,CAAC;EACxB,CAAC,CAAC,OAAOP,KAAK,EAAE;IACdQ,OAAO,CAACR,KAAK,CAAC,0BAA0BI,QAAQ,GAAG,EAAEJ,KAAK,CAAC;IAC3D,MAAMA,KAAK,CAAC,CAAC;EACf;AACF,CAAC;;AAED;AACA,OAAO,MAAMe,cAAc,GAAG,MAAOC,EAAE,IAAK;EAC1C,OAAO,MAAMH,UAAU,CAAC,cAAcG,EAAE,EAAE,CAAC,CAAC,CAAC;AAC/C,CAAC;;AAED","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}