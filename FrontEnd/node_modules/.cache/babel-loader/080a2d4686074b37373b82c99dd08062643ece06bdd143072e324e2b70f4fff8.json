{"ast":null,"code":"var _jsxFileName = \"/home/nish/Documents/GitHub/CSE_IIITG/FrontEnd/src/components/StudentDashboard/Login.js\",\n  _s = $RefreshSig$();\n// src/components/StudentDashboard/Login.js\nimport { notify } from '../../helper/notify';\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useAuthContext } from '../../context/authContext';\nimport './Login.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [loading, setLoading] = useState(false);\n  const {\n    dispatch\n  } = useAuthContext();\n  const navigator = useNavigate();\n  var json = '';\n  notify('You have successfully logged in!');\n  const handleLogin = async e => {\n    e.preventDefault();\n    const login = {\n      email,\n      password\n    };\n    setLoading(true);\n    const response = await fetch('http://localhost:3000/api/users/login', {\n      method: 'POST',\n      body: JSON.stringify(login),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    setLoading(false);\n    json = await response.json();\n    notify(json, 'You have successfully logged in!');\n    if (!response) {\n      try {\n        console.log(json);\n      } catch (e) {\n        throw new Error(e);\n      }\n    }\n    if (response.ok) {\n      try {\n        localStorage.setItem('user', JSON.stringify(json));\n        dispatch({\n          type: 'LOGIN',\n          payload: json\n        });\n        setEmail('');\n        setPassword('');\n        navigator('/studentdashboard');\n      } catch (e) {\n        throw new Error(e);\n      }\n    }\n  };\n\n  /*const [studentData, setStudentData] = useState({\n    email: '',\n    password: '',\n  });\n   const [error, setError] = useState('');\n  const [success, setSuccess] = useState('');\n   const { login } = useAuthContext();  // Get the login function from AuthContext\n  const navigate = useNavigate();  // Initialize the navigate function\n   const handleChange = (e) => {\n    const { name, value } = e.target;\n    setStudentData((prevData) => ({\n      ...prevData,\n      [name]: value,\n    }));\n  };\n   const handleSubmit = (e) => {\n    e.preventDefault();\n    setError('');  // Reset error message before submission\n    setSuccess('');  // Reset success message before submission\n     // Dummy data for student login\n    const dummyData = {\n      email: 'student@example.com',\n      password: 'student123',\n    };\n     // Check login credentials against the dummy data\n    if (studentData.email === dummyData.email && studentData.password === dummyData.password) {\n      setSuccess('Login Successful!');\n      login({ email: studentData.email });  // Update the user data in AuthContext\n      navigate('/student-dashboard');  // Redirect to Student Dashboard\n    } else {\n      setError('INVALID EMAIL OR PASSWORD !');\n    }\n  };\n  */\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Student Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          name: \"email\",\n          placeholder: \"Email\",\n          value: studentData.email,\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          name: \"password\",\n          placeholder: \"Password\",\n          value: studentData.password,\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"WilsST9PU1qFmAvNuariyUol9Jk=\", false, function () {\n  return [useAuthContext, useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["notify","React","useState","useNavigate","useAuthContext","jsxDEV","_jsxDEV","Login","_s","email","setEmail","password","setPassword","loading","setLoading","dispatch","navigator","json","handleLogin","e","preventDefault","login","response","fetch","method","body","JSON","stringify","headers","console","log","Error","ok","localStorage","setItem","type","payload","className","children","fileName","_jsxFileName","lineNumber","columnNumber","name","placeholder","value","studentData","onChange","handleChange","required","_c","$RefreshReg$"],"sources":["/home/nish/Documents/GitHub/CSE_IIITG/FrontEnd/src/components/StudentDashboard/Login.js"],"sourcesContent":["// src/components/StudentDashboard/Login.js\nimport { notify } from '../../helper/notify';\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useAuthContext } from '../../context/authContext'; \nimport './Login.css';  \n\n\n\nconst Login = () => {\n\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [loading, setLoading] = useState(false);\n  const { dispatch } = useAuthContext()\n  const navigator = useNavigate()\n  var json = ''\n\n\n  notify('You have successfully logged in!')\n\n  const handleLogin = async (e) => {\n  \n      e.preventDefault()\n  \n      const login = {email, password}\n      setLoading(true)\n      const response = await fetch('http://localhost:3000/api/users/login', {\n  \n        method: 'POST',\n        body: JSON.stringify(login),\n        headers : {\n          'Content-Type': 'application/json'\n        }\n      })\n\n      setLoading(false)\n      json = await response.json()\n      notify(json, 'You have successfully logged in!')\n\n      if(!response) {\n        try {\n          console.log(json)\n        } catch(e) {\n          throw new Error(e)\n        }\n      }\n\n      if(response.ok) {\n        try {\n          localStorage.setItem('user', JSON.stringify(json))\n          dispatch({type: 'LOGIN', payload: json})\n          setEmail('')\n          setPassword('')\n          navigator('/studentdashboard')\n        } catch(e) {\n          throw new Error(e)\n        }\n      }\n    }\n\n  /*const [studentData, setStudentData] = useState({\n    email: '',\n    password: '',\n  });\n\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState('');\n\n  const { login } = useAuthContext();  // Get the login function from AuthContext\n  const navigate = useNavigate();  // Initialize the navigate function\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setStudentData((prevData) => ({\n      ...prevData,\n      [name]: value,\n    }));\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    setError('');  // Reset error message before submission\n    setSuccess('');  // Reset success message before submission\n\n    // Dummy data for student login\n    const dummyData = {\n      email: 'student@example.com',\n      password: 'student123',\n    };\n\n    // Check login credentials against the dummy data\n    if (studentData.email === dummyData.email && studentData.password === dummyData.password) {\n      setSuccess('Login Successful!');\n      login({ email: studentData.email });  // Update the user data in AuthContext\n      navigate('/student-dashboard');  // Redirect to Student Dashboard\n    } else {\n      setError('INVALID EMAIL OR PASSWORD !');\n    }\n  };\n*/\n  return (\n    <div className=\"login-container\">\n      <div className=\"login-form\">\n        <h2>Student Login</h2>\n      \n        <div>\n          <input\n            type=\"email\"\n            name=\"email\"\n            placeholder=\"Email\"\n            value={studentData.email}\n            onChange={handleChange}\n            required\n          />\n          <input\n            type=\"password\"\n            name=\"password\"\n            placeholder=\"Password\"\n            value={studentData.password}\n            onChange={handleChange}\n            required\n          />\n          <button type=\"submit\">Login</button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Login;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}