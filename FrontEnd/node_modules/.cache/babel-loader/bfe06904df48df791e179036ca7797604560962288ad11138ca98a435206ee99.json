{"ast":null,"code":"var _jsxFileName = \"/home/nish/Documents/hostel-mess-management-system/hostel-mess-management-system/src/components/common/PrivateRoute.js\",\n  _s = $RefreshSig$();\n// src/components/common/PrivateRoute.js\nimport React from 'react';\nimport { Route, Navigate } from 'react-router-dom';\nimport { useAuthContext } from '../../context/authContext'; // Make sure this matches the path of your Auth context\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PrivateRoute = ({\n  component: Component,\n  ...rest\n}) => {\n  _s();\n  const {\n    isAuthenticated\n  } = useAuthContext(); // Assumes `useAuthContext` provides `isAuthenticated`\n\n  return /*#__PURE__*/_jsxDEV(Route, {\n    ...rest,\n    element: isAuthenticated ? /*#__PURE__*/_jsxDEV(Component, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n};\n_s(PrivateRoute, \"tMNK+egaLfuqWbyG8DYOyFVw8vw=\", false, function () {\n  return [useAuthContext];\n});\n_c = PrivateRoute;\nexport default PrivateRoute;\nvar _c;\n$RefreshReg$(_c, \"PrivateRoute\");","map":{"version":3,"names":["React","Route","Navigate","useAuthContext","jsxDEV","_jsxDEV","PrivateRoute","component","Component","rest","_s","isAuthenticated","element","fileName","_jsxFileName","lineNumber","columnNumber","to","_c","$RefreshReg$"],"sources":["/home/nish/Documents/hostel-mess-management-system/hostel-mess-management-system/src/components/common/PrivateRoute.js"],"sourcesContent":["// src/components/common/PrivateRoute.js\nimport React from 'react';\nimport { Route, Navigate } from 'react-router-dom';\nimport { useAuthContext } from '../../context/authContext'; // Make sure this matches the path of your Auth context\n\nconst PrivateRoute = ({ component: Component, ...rest }) => {\n  const { isAuthenticated } = useAuthContext(); // Assumes `useAuthContext` provides `isAuthenticated`\n\n  return (\n    <Route\n      {...rest}\n      element={\n        isAuthenticated ? (\n          <Component />\n        ) : (\n          <Navigate to=\"/login\" />\n        )\n      }\n    />\n  );\n};\n\nexport default PrivateRoute;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,KAAK,EAAEC,QAAQ,QAAQ,kBAAkB;AAClD,SAASC,cAAc,QAAQ,2BAA2B,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE5D,MAAMC,YAAY,GAAGA,CAAC;EAAEC,SAAS,EAAEC,SAAS;EAAE,GAAGC;AAAK,CAAC,KAAK;EAAAC,EAAA;EAC1D,MAAM;IAAEC;EAAgB,CAAC,GAAGR,cAAc,CAAC,CAAC,CAAC,CAAC;;EAE9C,oBACEE,OAAA,CAACJ,KAAK;IAAA,GACAQ,IAAI;IACRG,OAAO,EACLD,eAAe,gBACbN,OAAA,CAACG,SAAS;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,gBAEbX,OAAA,CAACH,QAAQ;MAACe,EAAE,EAAC;IAAQ;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAE1B;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEN,CAAC;AAACN,EAAA,CAfIJ,YAAY;EAAA,QACYH,cAAc;AAAA;AAAAe,EAAA,GADtCZ,YAAY;AAiBlB,eAAeA,YAAY;AAAC,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}