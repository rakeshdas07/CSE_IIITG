{"ast":null,"code":"// src/services/api.js\nimport axios from 'axios';\nconst API_BASE_URL = 'https://your-api-endpoint.com/api'; // Replace with your actual API base URL\n\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  timeout: 10000 // Set a timeout for requests\n});\n\n// Intercept requests to add headers if necessary\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token'); // Get token from local storage\n  if (token) {\n    config.headers['Authorization'] = `Bearer ${token}`; // Set authorization header\n  }\n  return config;\n}, error => Promise.reject(error) // Handle request errors\n);\n\n// Function to fetch meal plans\nexport const getMealPlan = async () => {\n  return await fetchData('/mealplans'); // Adjust the endpoint as needed\n};\n\n// Generalized function to fetch data from an endpoint\nexport const fetchData = async endpoint => {\n  try {\n    const response = await api.get(endpoint);\n    return response.data; // Return the data\n  } catch (error) {\n    var _error$response, _error$response$data;\n    console.error(`Error fetching data from ${endpoint}:`, error);\n    throw new Error(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'Failed to fetch data.');\n  }\n};\n\n// Generalized function to post data to an endpoint\nexport const postData = async (endpoint, data) => {\n  try {\n    const response = await api.post(endpoint, data);\n    return response.data; // Return the data\n  } catch (error) {\n    var _error$response2, _error$response2$data;\n    console.error(`Error posting data to ${endpoint}:`, error);\n    throw new Error(((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || 'Failed to post data.');\n  }\n};\n\n// Function to submit feedback\nexport const submitFeedback = async feedbackData => {\n  return await postData('/feedback', feedbackData); // Adjust the endpoint as per your API structure\n};\n\n// Function to update meal plans\nexport const updateMealPlan = async mealPlan => {\n  return await updateData('/mealplans', mealPlan); // Adjust endpoint\n};\n\n// Generalized function to update data at an endpoint\nexport const updateData = async (endpoint, data) => {\n  try {\n    const response = await api.put(endpoint, data);\n    return response.data; // Return the data\n  } catch (error) {\n    var _error$response3, _error$response3$data;\n    console.error(`Error updating data at ${endpoint}:`, error);\n    throw new Error(((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.message) || 'Failed to update data.');\n  }\n};\n\n// Generalized function to delete data at an endpoint\nexport const deleteData = async endpoint => {\n  try {\n    const response = await api.delete(endpoint);\n    return response.data; // Return the data\n  } catch (error) {\n    var _error$response4, _error$response4$data;\n    console.error(`Error deleting data at ${endpoint}:`, error);\n    throw new Error(((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : (_error$response4$data = _error$response4.data) === null || _error$response4$data === void 0 ? void 0 : _error$response4$data.message) || 'Failed to delete data.');\n  }\n};\n\n// New function to delete meal plan by ID\nexport const deleteMealPlan = async id => {\n  return await deleteData(`/mealplans/${id}`); // Adjust the endpoint as per your API structure\n};\n\n// Function to fetch attendance report\nexport const getAttendanceReport = async () => {\n  try {\n    const response = await fetchData('/attendance'); // Adjust endpoint as per your API structure\n    return response;\n  } catch (error) {\n    var _error$response5, _error$response5$data;\n    console.error('Failed to fetch attendance report:', error);\n    throw new Error(((_error$response5 = error.response) === null || _error$response5 === void 0 ? void 0 : (_error$response5$data = _error$response5.data) === null || _error$response5$data === void 0 ? void 0 : _error$response5$data.message) || 'Failed to fetch attendance report.');\n  }\n};\n\n// Function to fetch feedback analysis\nexport const getFeedbackAnalysis = async () => {\n  try {\n    const response = await fetchData('/feedback/analysis'); // Adjust the endpoint as per your API structure\n    return response;\n  } catch (error) {\n    var _error$response6, _error$response6$data;\n    console.error('Failed to fetch feedback analysis:', error);\n    throw new Error(((_error$response6 = error.response) === null || _error$response6 === void 0 ? void 0 : (_error$response6$data = _error$response6.data) === null || _error$response6$data === void 0 ? void 0 : _error$response6$data.message) || 'Failed to fetch feedback analysis.');\n  }\n};\n\n// Function to update inventory\nexport const updateInventory = async inventoryData => {\n  return await updateData('/inventory', inventoryData); // Adjust endpoint as per your API structure\n};\n\n// Function to get inventory\nexport const getInventory = async () => {\n  try {\n    const response = await fetchData('/inventory'); // Adjust the endpoint as per your API structure\n    return response;\n  } catch (error) {\n    var _error$response7, _error$response7$data;\n    console.error('Failed to fetch inventory:', error);\n    throw new Error(((_error$response7 = error.response) === null || _error$response7 === void 0 ? void 0 : (_error$response7$data = _error$response7.data) === null || _error$response7$data === void 0 ? void 0 : _error$response7$data.message) || 'Failed to fetch inventory.');\n  }\n};\n\n// Function to fetch billing history\nexport const getBillingHistory = async () => {\n  try {\n    const response = await fetchData('/billing/history'); // Adjust the endpoint as per your API structure\n    return response;\n  } catch (error) {\n    var _error$response8, _error$response8$data;\n    console.error('Failed to fetch billing history:', error);\n    throw new Error(((_error$response8 = error.response) === null || _error$response8 === void 0 ? void 0 : (_error$response8$data = _error$response8.data) === null || _error$response8$data === void 0 ? void 0 : _error$response8$data.message) || 'Failed to fetch billing history.');\n  }\n};\n\n// New function to fetch report analytics\nexport const getReportAnalytics = async () => {\n  try {\n    const response = await fetchData('/report/analytics'); // Adjust the endpoint as per your API structure\n    return response;\n  } catch (error) {\n    var _error$response9, _error$response9$data;\n    console.error('Failed to fetch report analytics:', error);\n    throw new Error(((_error$response9 = error.response) === null || _error$response9 === void 0 ? void 0 : (_error$response9$data = _error$response9.data) === null || _error$response9$data === void 0 ? void 0 : _error$response9$data.message) || 'Failed to fetch report analytics.');\n  }\n};","map":{"version":3,"names":["axios","API_BASE_URL","api","create","baseURL","timeout","interceptors","request","use","config","token","localStorage","getItem","headers","error","Promise","reject","getMealPlan","fetchData","endpoint","response","get","data","_error$response","_error$response$data","console","Error","message","postData","post","_error$response2","_error$response2$data","submitFeedback","feedbackData","updateMealPlan","mealPlan","updateData","put","_error$response3","_error$response3$data","deleteData","delete","_error$response4","_error$response4$data","deleteMealPlan","id","getAttendanceReport","_error$response5","_error$response5$data","getFeedbackAnalysis","_error$response6","_error$response6$data","updateInventory","inventoryData","getInventory","_error$response7","_error$response7$data","getBillingHistory","_error$response8","_error$response8$data","getReportAnalytics","_error$response9","_error$response9$data"],"sources":["/home/nish/Documents/hostel-mess-management-system/hostel-mess-management-system/src/services/api.js"],"sourcesContent":["// src/services/api.js\nimport axios from 'axios';\n\nconst API_BASE_URL = 'https://your-api-endpoint.com/api'; // Replace with your actual API base URL\n\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  timeout: 10000, // Set a timeout for requests\n});\n\n// Intercept requests to add headers if necessary\napi.interceptors.request.use(\n  (config) => {\n    const token = localStorage.getItem('token'); // Get token from local storage\n    if (token) {\n      config.headers['Authorization'] = `Bearer ${token}`; // Set authorization header\n    }\n    return config;\n  },\n  (error) => Promise.reject(error) // Handle request errors\n);\n\n// Function to fetch meal plans\nexport const getMealPlan = async () => {\n  return await fetchData('/mealplans'); // Adjust the endpoint as needed\n};\n\n// Generalized function to fetch data from an endpoint\nexport const fetchData = async (endpoint) => {\n  try {\n    const response = await api.get(endpoint);\n    return response.data; // Return the data\n  } catch (error) {\n    console.error(`Error fetching data from ${endpoint}:`, error);\n    throw new Error(error.response?.data?.message || 'Failed to fetch data.');\n  }\n};\n\n// Generalized function to post data to an endpoint\nexport const postData = async (endpoint, data) => {\n  try {\n    const response = await api.post(endpoint, data);\n    return response.data; // Return the data\n  } catch (error) {\n    console.error(`Error posting data to ${endpoint}:`, error);\n    throw new Error(error.response?.data?.message || 'Failed to post data.');\n  }\n};\n\n// Function to submit feedback\nexport const submitFeedback = async (feedbackData) => {\n  return await postData('/feedback', feedbackData); // Adjust the endpoint as per your API structure\n};\n\n// Function to update meal plans\nexport const updateMealPlan = async (mealPlan) => {\n  return await updateData('/mealplans', mealPlan); // Adjust endpoint\n};\n\n// Generalized function to update data at an endpoint\nexport const updateData = async (endpoint, data) => {\n  try {\n    const response = await api.put(endpoint, data);\n    return response.data; // Return the data\n  } catch (error) {\n    console.error(`Error updating data at ${endpoint}:`, error);\n    throw new Error(error.response?.data?.message || 'Failed to update data.');\n  }\n};\n\n// Generalized function to delete data at an endpoint\nexport const deleteData = async (endpoint) => {\n  try {\n    const response = await api.delete(endpoint);\n    return response.data; // Return the data\n  } catch (error) {\n    console.error(`Error deleting data at ${endpoint}:`, error);\n    throw new Error(error.response?.data?.message || 'Failed to delete data.');\n  }\n};\n\n// New function to delete meal plan by ID\nexport const deleteMealPlan = async (id) => {\n  return await deleteData(`/mealplans/${id}`); // Adjust the endpoint as per your API structure\n};\n\n// Function to fetch attendance report\nexport const getAttendanceReport = async () => {\n  try {\n    const response = await fetchData('/attendance'); // Adjust endpoint as per your API structure\n    return response;\n  } catch (error) {\n    console.error('Failed to fetch attendance report:', error);\n    throw new Error(error.response?.data?.message || 'Failed to fetch attendance report.');\n  }\n};\n\n// Function to fetch feedback analysis\nexport const getFeedbackAnalysis = async () => {\n  try {\n    const response = await fetchData('/feedback/analysis'); // Adjust the endpoint as per your API structure\n    return response;\n  } catch (error) {\n    console.error('Failed to fetch feedback analysis:', error);\n    throw new Error(error.response?.data?.message || 'Failed to fetch feedback analysis.');\n  }\n};\n\n// Function to update inventory\nexport const updateInventory = async (inventoryData) => {\n  return await updateData('/inventory', inventoryData); // Adjust endpoint as per your API structure\n};\n\n// Function to get inventory\nexport const getInventory = async () => {\n  try {\n    const response = await fetchData('/inventory'); // Adjust the endpoint as per your API structure\n    return response;\n  } catch (error) {\n    console.error('Failed to fetch inventory:', error);\n    throw new Error(error.response?.data?.message || 'Failed to fetch inventory.');\n  }\n};\n\n// Function to fetch billing history\nexport const getBillingHistory = async () => {\n  try {\n    const response = await fetchData('/billing/history'); // Adjust the endpoint as per your API structure\n    return response;\n  } catch (error) {\n    console.error('Failed to fetch billing history:', error);\n    throw new Error(error.response?.data?.message || 'Failed to fetch billing history.');\n  }\n};\n\n// New function to fetch report analytics\nexport const getReportAnalytics = async () => {\n  try {\n    const response = await fetchData('/report/analytics'); // Adjust the endpoint as per your API structure\n    return response;\n  } catch (error) {\n    console.error('Failed to fetch report analytics:', error);\n    throw new Error(error.response?.data?.message || 'Failed to fetch report analytics.');\n  }\n};\n"],"mappings":"AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,YAAY,GAAG,mCAAmC,CAAC,CAAC;;AAE1D,MAAMC,GAAG,GAAGF,KAAK,CAACG,MAAM,CAAC;EACvBC,OAAO,EAAEH,YAAY;EACrBI,OAAO,EAAE,KAAK,CAAE;AAClB,CAAC,CAAC;;AAEF;AACAH,GAAG,CAACI,YAAY,CAACC,OAAO,CAACC,GAAG,CACzBC,MAAM,IAAK;EACV,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC;EAC7C,IAAIF,KAAK,EAAE;IACTD,MAAM,CAACI,OAAO,CAAC,eAAe,CAAC,GAAG,UAAUH,KAAK,EAAE,CAAC,CAAC;EACvD;EACA,OAAOD,MAAM;AACf,CAAC,EACAK,KAAK,IAAKC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC,CAAC;AACnC,CAAC;;AAED;AACA,OAAO,MAAMG,WAAW,GAAG,MAAAA,CAAA,KAAY;EACrC,OAAO,MAAMC,SAAS,CAAC,YAAY,CAAC,CAAC,CAAC;AACxC,CAAC;;AAED;AACA,OAAO,MAAMA,SAAS,GAAG,MAAOC,QAAQ,IAAK;EAC3C,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMlB,GAAG,CAACmB,GAAG,CAACF,QAAQ,CAAC;IACxC,OAAOC,QAAQ,CAACE,IAAI,CAAC,CAAC;EACxB,CAAC,CAAC,OAAOR,KAAK,EAAE;IAAA,IAAAS,eAAA,EAAAC,oBAAA;IACdC,OAAO,CAACX,KAAK,CAAC,4BAA4BK,QAAQ,GAAG,EAAEL,KAAK,CAAC;IAC7D,MAAM,IAAIY,KAAK,CAAC,EAAAH,eAAA,GAAAT,KAAK,CAACM,QAAQ,cAAAG,eAAA,wBAAAC,oBAAA,GAAdD,eAAA,CAAgBD,IAAI,cAAAE,oBAAA,uBAApBA,oBAAA,CAAsBG,OAAO,KAAI,uBAAuB,CAAC;EAC3E;AACF,CAAC;;AAED;AACA,OAAO,MAAMC,QAAQ,GAAG,MAAAA,CAAOT,QAAQ,EAAEG,IAAI,KAAK;EAChD,IAAI;IACF,MAAMF,QAAQ,GAAG,MAAMlB,GAAG,CAAC2B,IAAI,CAACV,QAAQ,EAAEG,IAAI,CAAC;IAC/C,OAAOF,QAAQ,CAACE,IAAI,CAAC,CAAC;EACxB,CAAC,CAAC,OAAOR,KAAK,EAAE;IAAA,IAAAgB,gBAAA,EAAAC,qBAAA;IACdN,OAAO,CAACX,KAAK,CAAC,yBAAyBK,QAAQ,GAAG,EAAEL,KAAK,CAAC;IAC1D,MAAM,IAAIY,KAAK,CAAC,EAAAI,gBAAA,GAAAhB,KAAK,CAACM,QAAQ,cAAAU,gBAAA,wBAAAC,qBAAA,GAAdD,gBAAA,CAAgBR,IAAI,cAAAS,qBAAA,uBAApBA,qBAAA,CAAsBJ,OAAO,KAAI,sBAAsB,CAAC;EAC1E;AACF,CAAC;;AAED;AACA,OAAO,MAAMK,cAAc,GAAG,MAAOC,YAAY,IAAK;EACpD,OAAO,MAAML,QAAQ,CAAC,WAAW,EAAEK,YAAY,CAAC,CAAC,CAAC;AACpD,CAAC;;AAED;AACA,OAAO,MAAMC,cAAc,GAAG,MAAOC,QAAQ,IAAK;EAChD,OAAO,MAAMC,UAAU,CAAC,YAAY,EAAED,QAAQ,CAAC,CAAC,CAAC;AACnD,CAAC;;AAED;AACA,OAAO,MAAMC,UAAU,GAAG,MAAAA,CAAOjB,QAAQ,EAAEG,IAAI,KAAK;EAClD,IAAI;IACF,MAAMF,QAAQ,GAAG,MAAMlB,GAAG,CAACmC,GAAG,CAAClB,QAAQ,EAAEG,IAAI,CAAC;IAC9C,OAAOF,QAAQ,CAACE,IAAI,CAAC,CAAC;EACxB,CAAC,CAAC,OAAOR,KAAK,EAAE;IAAA,IAAAwB,gBAAA,EAAAC,qBAAA;IACdd,OAAO,CAACX,KAAK,CAAC,0BAA0BK,QAAQ,GAAG,EAAEL,KAAK,CAAC;IAC3D,MAAM,IAAIY,KAAK,CAAC,EAAAY,gBAAA,GAAAxB,KAAK,CAACM,QAAQ,cAAAkB,gBAAA,wBAAAC,qBAAA,GAAdD,gBAAA,CAAgBhB,IAAI,cAAAiB,qBAAA,uBAApBA,qBAAA,CAAsBZ,OAAO,KAAI,wBAAwB,CAAC;EAC5E;AACF,CAAC;;AAED;AACA,OAAO,MAAMa,UAAU,GAAG,MAAOrB,QAAQ,IAAK;EAC5C,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMlB,GAAG,CAACuC,MAAM,CAACtB,QAAQ,CAAC;IAC3C,OAAOC,QAAQ,CAACE,IAAI,CAAC,CAAC;EACxB,CAAC,CAAC,OAAOR,KAAK,EAAE;IAAA,IAAA4B,gBAAA,EAAAC,qBAAA;IACdlB,OAAO,CAACX,KAAK,CAAC,0BAA0BK,QAAQ,GAAG,EAAEL,KAAK,CAAC;IAC3D,MAAM,IAAIY,KAAK,CAAC,EAAAgB,gBAAA,GAAA5B,KAAK,CAACM,QAAQ,cAAAsB,gBAAA,wBAAAC,qBAAA,GAAdD,gBAAA,CAAgBpB,IAAI,cAAAqB,qBAAA,uBAApBA,qBAAA,CAAsBhB,OAAO,KAAI,wBAAwB,CAAC;EAC5E;AACF,CAAC;;AAED;AACA,OAAO,MAAMiB,cAAc,GAAG,MAAOC,EAAE,IAAK;EAC1C,OAAO,MAAML,UAAU,CAAC,cAAcK,EAAE,EAAE,CAAC,CAAC,CAAC;AAC/C,CAAC;;AAED;AACA,OAAO,MAAMC,mBAAmB,GAAG,MAAAA,CAAA,KAAY;EAC7C,IAAI;IACF,MAAM1B,QAAQ,GAAG,MAAMF,SAAS,CAAC,aAAa,CAAC,CAAC,CAAC;IACjD,OAAOE,QAAQ;EACjB,CAAC,CAAC,OAAON,KAAK,EAAE;IAAA,IAAAiC,gBAAA,EAAAC,qBAAA;IACdvB,OAAO,CAACX,KAAK,CAAC,oCAAoC,EAAEA,KAAK,CAAC;IAC1D,MAAM,IAAIY,KAAK,CAAC,EAAAqB,gBAAA,GAAAjC,KAAK,CAACM,QAAQ,cAAA2B,gBAAA,wBAAAC,qBAAA,GAAdD,gBAAA,CAAgBzB,IAAI,cAAA0B,qBAAA,uBAApBA,qBAAA,CAAsBrB,OAAO,KAAI,oCAAoC,CAAC;EACxF;AACF,CAAC;;AAED;AACA,OAAO,MAAMsB,mBAAmB,GAAG,MAAAA,CAAA,KAAY;EAC7C,IAAI;IACF,MAAM7B,QAAQ,GAAG,MAAMF,SAAS,CAAC,oBAAoB,CAAC,CAAC,CAAC;IACxD,OAAOE,QAAQ;EACjB,CAAC,CAAC,OAAON,KAAK,EAAE;IAAA,IAAAoC,gBAAA,EAAAC,qBAAA;IACd1B,OAAO,CAACX,KAAK,CAAC,oCAAoC,EAAEA,KAAK,CAAC;IAC1D,MAAM,IAAIY,KAAK,CAAC,EAAAwB,gBAAA,GAAApC,KAAK,CAACM,QAAQ,cAAA8B,gBAAA,wBAAAC,qBAAA,GAAdD,gBAAA,CAAgB5B,IAAI,cAAA6B,qBAAA,uBAApBA,qBAAA,CAAsBxB,OAAO,KAAI,oCAAoC,CAAC;EACxF;AACF,CAAC;;AAED;AACA,OAAO,MAAMyB,eAAe,GAAG,MAAOC,aAAa,IAAK;EACtD,OAAO,MAAMjB,UAAU,CAAC,YAAY,EAAEiB,aAAa,CAAC,CAAC,CAAC;AACxD,CAAC;;AAED;AACA,OAAO,MAAMC,YAAY,GAAG,MAAAA,CAAA,KAAY;EACtC,IAAI;IACF,MAAMlC,QAAQ,GAAG,MAAMF,SAAS,CAAC,YAAY,CAAC,CAAC,CAAC;IAChD,OAAOE,QAAQ;EACjB,CAAC,CAAC,OAAON,KAAK,EAAE;IAAA,IAAAyC,gBAAA,EAAAC,qBAAA;IACd/B,OAAO,CAACX,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;IAClD,MAAM,IAAIY,KAAK,CAAC,EAAA6B,gBAAA,GAAAzC,KAAK,CAACM,QAAQ,cAAAmC,gBAAA,wBAAAC,qBAAA,GAAdD,gBAAA,CAAgBjC,IAAI,cAAAkC,qBAAA,uBAApBA,qBAAA,CAAsB7B,OAAO,KAAI,4BAA4B,CAAC;EAChF;AACF,CAAC;;AAED;AACA,OAAO,MAAM8B,iBAAiB,GAAG,MAAAA,CAAA,KAAY;EAC3C,IAAI;IACF,MAAMrC,QAAQ,GAAG,MAAMF,SAAS,CAAC,kBAAkB,CAAC,CAAC,CAAC;IACtD,OAAOE,QAAQ;EACjB,CAAC,CAAC,OAAON,KAAK,EAAE;IAAA,IAAA4C,gBAAA,EAAAC,qBAAA;IACdlC,OAAO,CAACX,KAAK,CAAC,kCAAkC,EAAEA,KAAK,CAAC;IACxD,MAAM,IAAIY,KAAK,CAAC,EAAAgC,gBAAA,GAAA5C,KAAK,CAACM,QAAQ,cAAAsC,gBAAA,wBAAAC,qBAAA,GAAdD,gBAAA,CAAgBpC,IAAI,cAAAqC,qBAAA,uBAApBA,qBAAA,CAAsBhC,OAAO,KAAI,kCAAkC,CAAC;EACtF;AACF,CAAC;;AAED;AACA,OAAO,MAAMiC,kBAAkB,GAAG,MAAAA,CAAA,KAAY;EAC5C,IAAI;IACF,MAAMxC,QAAQ,GAAG,MAAMF,SAAS,CAAC,mBAAmB,CAAC,CAAC,CAAC;IACvD,OAAOE,QAAQ;EACjB,CAAC,CAAC,OAAON,KAAK,EAAE;IAAA,IAAA+C,gBAAA,EAAAC,qBAAA;IACdrC,OAAO,CAACX,KAAK,CAAC,mCAAmC,EAAEA,KAAK,CAAC;IACzD,MAAM,IAAIY,KAAK,CAAC,EAAAmC,gBAAA,GAAA/C,KAAK,CAACM,QAAQ,cAAAyC,gBAAA,wBAAAC,qBAAA,GAAdD,gBAAA,CAAgBvC,IAAI,cAAAwC,qBAAA,uBAApBA,qBAAA,CAAsBnC,OAAO,KAAI,mCAAmC,CAAC;EACvF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}