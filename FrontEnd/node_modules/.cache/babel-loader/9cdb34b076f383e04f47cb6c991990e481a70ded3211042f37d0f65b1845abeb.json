{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Manish Nath\\\\Documents\\\\GitHub\\\\HSU shop\\\\CSE_IIITG\\\\FrontEnd\\\\src\\\\components\\\\AdminDashboard\\\\AdminLogin.js\",\n  _s = $RefreshSig$();\nimport { notify } from '../../helper/notify';\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\n//import { useAuthContext } from '../../context/authContext';\nimport './AdminLogin.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AdminLogin = () => {\n  _s();\n  const [email, setEmail] = useState('');\n  const [pass, setPassword] = useState('');\n  const [loading, setLoading] = useState(false);\n  //const { dispatch } = useAuthContext()\n  const navigator = useNavigate();\n  var json = '';\n  notify('You have successfully logged in!');\n  const handleLogin = async e => {\n    e.preventDefault();\n    const login = {\n      email,\n      pass\n    };\n    setLoading(true);\n    const response = await fetch('http://localhost:3030/api/users/admin-login', {\n      method: 'POST',\n      body: JSON.stringify(login),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    setLoading(false);\n    json = await response.json();\n    notify(json, 'You have successfully logged in!');\n    if (!response) {\n      try {\n        console.log(json);\n      } catch (e) {\n        throw new Error(e);\n      }\n    }\n    if (response.ok) {\n      try {\n        localStorage.setItem('user', JSON.stringify(json));\n        //dispatch({type: 'LOGIN', payload: json})\n        setEmail('');\n        setPassword('');\n        navigator('/admin-dashboard');\n      } catch (e) {\n        throw new Error(e);\n      }\n    }\n  };\n\n  /*const [adminData, setAdminData] = useState({\r\n    email: '',\r\n    password: '',\r\n  });\r\n    const [error, setError] = useState('');\r\n  const [success, setSuccess] = useState('');\r\n  const { login } = useAuthContext();\r\n  const navigate = useNavigate();\r\n    const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setAdminData((prevData) => ({\r\n      ...prevData,\r\n      [name]: value,\r\n    }));\r\n  };\r\n    const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setError('');\r\n    setSuccess('');\r\n      // Dummy data for admin login\r\n    const dummyData = {\r\n      email: 'admin@example.com',\r\n      password: 'admin123',\r\n    };\r\n      if (adminData.email === dummyData.email && adminData.password === dummyData.password) {\r\n      setSuccess('Login Successful!');\r\n      login(dummyData);  // Login using context\r\n      navigate('/admin-dashboard');  // Redirect to Admin Dashboard\r\n    } else {\r\n      setError('INVALID EMAIL OR PASSWORD !');\r\n    }\r\n  };*/\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"admin-login-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"admin-login-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Admin Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          name: \"email\",\n          placeholder: \"Email\",\n          value: email,\n          onChange: e => setEmail(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          name: \"password\",\n          placeholder: \"Password\",\n          value: password,\n          onChange: e => setPassword(e.target.value),\n          autoComplete: \"current-password\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          onClick: handleLogin,\n          disabled: loading,\n          children: loading ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: \"loading...\"\n          }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: \"login\"\n          }, void 0, false)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 5\n  }, this);\n};\n_s(AdminLogin, \"QdXgA7uA2VpfUYTOtyJacDmEPzw=\", false, function () {\n  return [useNavigate];\n});\n_c = AdminLogin;\nexport default AdminLogin;\nvar _c;\n$RefreshReg$(_c, \"AdminLogin\");","map":{"version":3,"names":["notify","React","useState","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","AdminLogin","_s","email","setEmail","pass","setPassword","loading","setLoading","navigator","json","handleLogin","e","preventDefault","login","response","fetch","method","body","JSON","stringify","headers","console","log","Error","ok","localStorage","setItem","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","name","placeholder","value","onChange","target","required","password","autoComplete","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/Users/Manish Nath/Documents/GitHub/HSU shop/CSE_IIITG/FrontEnd/src/components/AdminDashboard/AdminLogin.js"],"sourcesContent":["import { notify } from '../../helper/notify';\r\nimport React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\n//import { useAuthContext } from '../../context/authContext';\r\nimport './AdminLogin.css';\r\n\r\nconst AdminLogin = () => {\r\n\r\n\r\n  const [email, setEmail] = useState('');\r\n  const [pass, setPassword] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n  //const { dispatch } = useAuthContext()\r\n  const navigator = useNavigate()\r\n  var json = ''\r\n\r\n\r\n  notify('You have successfully logged in!')\r\n\r\n  const handleLogin = async (e) => {\r\n  \r\n      e.preventDefault()\r\n  \r\n      const login = {email, pass}\r\n      setLoading(true)\r\n      const response = await fetch('http://localhost:3030/api/users/admin-login', {\r\n  \r\n        method: 'POST',\r\n        body: JSON.stringify(login),\r\n        headers : {\r\n          'Content-Type': 'application/json'\r\n        }\r\n      })\r\n\r\n      setLoading(false)\r\n      json = await response.json()\r\n      notify(json, 'You have successfully logged in!')\r\n\r\n      if(!response) {\r\n        try {\r\n          console.log(json)\r\n        } catch(e) {\r\n          throw new Error(e)\r\n        }\r\n      }\r\n\r\n      if(response.ok) {\r\n        try {\r\n          localStorage.setItem('user', JSON.stringify(json))\r\n          //dispatch({type: 'LOGIN', payload: json})\r\n          setEmail('')\r\n          setPassword('')\r\n          navigator('/admin-dashboard')\r\n        } catch(e) {\r\n          throw new Error(e)\r\n        }\r\n      }\r\n    }\r\n\r\n  /*const [adminData, setAdminData] = useState({\r\n    email: '',\r\n    password: '',\r\n  });\r\n\r\n  const [error, setError] = useState('');\r\n  const [success, setSuccess] = useState('');\r\n  const { login } = useAuthContext();\r\n  const navigate = useNavigate();\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setAdminData((prevData) => ({\r\n      ...prevData,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setError('');\r\n    setSuccess('');\r\n\r\n    // Dummy data for admin login\r\n    const dummyData = {\r\n      email: 'admin@example.com',\r\n      password: 'admin123',\r\n    };\r\n\r\n    if (adminData.email === dummyData.email && adminData.password === dummyData.password) {\r\n      setSuccess('Login Successful!');\r\n      login(dummyData);  // Login using context\r\n      navigate('/admin-dashboard');  // Redirect to Admin Dashboard\r\n    } else {\r\n      setError('INVALID EMAIL OR PASSWORD !');\r\n    }\r\n  };*/\r\n\r\n  return (\r\n    <div className=\"admin-login-container\">\r\n      <div className=\"admin-login-form\">\r\n        <h2>Admin Login</h2>\r\n\r\n\r\n        <div>\r\n          <input\r\n            type=\"email\"\r\n            name=\"email\"\r\n            placeholder=\"Email\"\r\n            value={email}\r\n            onChange={(e)=>setEmail(e.target.value)}\r\n            required\r\n          />\r\n          <input\r\n            type=\"password\"\r\n            name=\"password\"\r\n            placeholder=\"Password\"\r\n            value={password}\r\n            onChange={(e)=>setPassword(e.target.value)}\r\n            autoComplete='current-password'\r\n            required\r\n          />\r\n          <button type=\"submit\" onClick={handleLogin} disabled={loading}>{loading ?<>loading...</>:<>login</>}</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminLogin;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}