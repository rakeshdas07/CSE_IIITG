{"ast":null,"code":"var _jsxFileName = \"/home/nish/Documents/GitHub/CSE_IIITG/FrontEnd/src/components/AdminDashboard/ReportAnalytics.js\",\n  _s = $RefreshSig$();\n// src/components/AdminDashboard/ReportAnalytics.js\nimport React, { useEffect, useState } from 'react';\nimport { getReportAnalytics } from '../../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ReportAnalytics = () => {\n  _s();\n  const [reportData, setReportData] = useState([]);\n  const [loading, setLoading] = useState(true); // Loading state\n  const [error, setError] = useState(null); // Error state\n\n  useEffect(() => {\n    const fetchReportAnalytics = async () => {\n      try {\n        const data = await getReportAnalytics();\n        setReportData(data);\n      } catch (err) {\n        setError('Failed to fetch report analytics');\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchReportAnalytics();\n  }, []);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading report analytics...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Report and Analytics\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: reportData.length > 0 ? reportData.map((report, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [report.category, \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 15\n        }, this), \" \", report.value]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No report data available.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_s(ReportAnalytics, \"njU1LwbAj+hy95OZ8SnTqhCKPQ0=\");\n_c = ReportAnalytics;\nexport default ReportAnalytics;\nvar _c;\n$RefreshReg$(_c, \"ReportAnalytics\");","map":{"version":3,"names":["React","useEffect","useState","getReportAnalytics","jsxDEV","_jsxDEV","ReportAnalytics","_s","reportData","setReportData","loading","setLoading","error","setError","fetchReportAnalytics","data","err","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","report","index","category","value","_c","$RefreshReg$"],"sources":["/home/nish/Documents/GitHub/CSE_IIITG/FrontEnd/src/components/AdminDashboard/ReportAnalytics.js"],"sourcesContent":["// src/components/AdminDashboard/ReportAnalytics.js\nimport React, { useEffect, useState } from 'react';\nimport { getReportAnalytics } from '../../services/api';\n\nconst ReportAnalytics = () => {\n  const [reportData, setReportData] = useState([]);\n  const [loading, setLoading] = useState(true); // Loading state\n  const [error, setError] = useState(null); // Error state\n\n  useEffect(() => {\n    const fetchReportAnalytics = async () => {\n      try {\n        const data = await getReportAnalytics();\n        setReportData(data);\n      } catch (err) {\n        setError('Failed to fetch report analytics');\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchReportAnalytics();\n  }, []);\n\n  if (loading) return <p>Loading report analytics...</p>;\n  if (error) return <p>{error}</p>;\n\n  return (\n    <div>\n      <h2>Report and Analytics</h2>\n      <ul>\n        {reportData.length > 0 ? (\n          reportData.map((report, index) => (\n            <li key={index}>\n              <strong>{report.category}:</strong> {report.value}\n            </li>\n          ))\n        ) : (\n          <p>No report data available.</p>\n        )}\n      </ul>\n    </div>\n  );\n};\n\nexport default ReportAnalytics;"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,kBAAkB,QAAQ,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExD,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC5B,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACQ,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;EAC9C,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;;EAE1CD,SAAS,CAAC,MAAM;IACd,MAAMa,oBAAoB,GAAG,MAAAA,CAAA,KAAY;MACvC,IAAI;QACF,MAAMC,IAAI,GAAG,MAAMZ,kBAAkB,CAAC,CAAC;QACvCM,aAAa,CAACM,IAAI,CAAC;MACrB,CAAC,CAAC,OAAOC,GAAG,EAAE;QACZH,QAAQ,CAAC,kCAAkC,CAAC;MAC9C,CAAC,SAAS;QACRF,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC;IACDG,oBAAoB,CAAC,CAAC;EACxB,CAAC,EAAE,EAAE,CAAC;EAEN,IAAIJ,OAAO,EAAE,oBAAOL,OAAA;IAAAY,QAAA,EAAG;EAA2B;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAG,CAAC;EACtD,IAAIT,KAAK,EAAE,oBAAOP,OAAA;IAAAY,QAAA,EAAIL;EAAK;IAAAM,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAI,CAAC;EAEhC,oBACEhB,OAAA;IAAAY,QAAA,gBACEZ,OAAA;MAAAY,QAAA,EAAI;IAAoB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC7BhB,OAAA;MAAAY,QAAA,EACGT,UAAU,CAACc,MAAM,GAAG,CAAC,GACpBd,UAAU,CAACe,GAAG,CAAC,CAACC,MAAM,EAAEC,KAAK,kBAC3BpB,OAAA;QAAAY,QAAA,gBACEZ,OAAA;UAAAY,QAAA,GAASO,MAAM,CAACE,QAAQ,EAAC,GAAC;QAAA;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,KAAC,EAACG,MAAM,CAACG,KAAK;MAAA,GAD1CF,KAAK;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEV,CACL,CAAC,gBAEFhB,OAAA;QAAAY,QAAA,EAAG;MAAyB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG;IAChC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV,CAAC;AAACd,EAAA,CAtCID,eAAe;AAAAsB,EAAA,GAAftB,eAAe;AAwCrB,eAAeA,eAAe;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}