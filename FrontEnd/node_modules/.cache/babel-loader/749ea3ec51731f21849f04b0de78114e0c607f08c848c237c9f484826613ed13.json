{"ast":null,"code":"var _jsxFileName = \"/home/nish/Documents/hostel-mess-management-system/hostel-mess-management-system/src/components/StudentDashboard/Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './StudentLogin.css'; // Add your CSS for styling\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StudentLogin = () => {\n  _s();\n  const [studentData, setStudentData] = useState({\n    email: '',\n    password: ''\n  });\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState('');\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setStudentData(prevData => ({\n      ...prevData,\n      [name]: value\n    }));\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    // Validate fields and perform login logic here\n    if (studentData.email === 'student@example.com' && studentData.password === 'student123') {\n      setSuccess('Login Successful!');\n      // Redirect to student dashboard on success\n      // Redirect logic should be added here\n    } else {\n      setError('Invalid email or password');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"student-login-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"student-login-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Student Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), success && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"success-message\",\n        children: success\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 21\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-message\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          name: \"email\",\n          placeholder: \"Email\",\n          value: studentData.email,\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          name: \"password\",\n          placeholder: \"Password\",\n          value: studentData.password,\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_s(StudentLogin, \"TLLrTUhG51AcjGY1Fi11cJ0aTmo=\");\n_c = StudentLogin;\nexport default StudentLogin;\nvar _c;\n$RefreshReg$(_c, \"StudentLogin\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","StudentLogin","_s","studentData","setStudentData","email","password","error","setError","success","setSuccess","handleChange","e","name","value","target","prevData","handleSubmit","preventDefault","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","onChange","required","_c","$RefreshReg$"],"sources":["/home/nish/Documents/hostel-mess-management-system/hostel-mess-management-system/src/components/StudentDashboard/Login.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './StudentLogin.css'; // Add your CSS for styling\n\nconst StudentLogin = () => {\n  const [studentData, setStudentData] = useState({\n    email: '',\n    password: '',\n  });\n\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState('');\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setStudentData((prevData) => ({\n      ...prevData,\n      [name]: value,\n    }));\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    // Validate fields and perform login logic here\n    if (studentData.email === 'student@example.com' && studentData.password === 'student123') {\n      setSuccess('Login Successful!');\n      // Redirect to student dashboard on success\n      // Redirect logic should be added here\n    } else {\n      setError('Invalid email or password');\n    }\n  };\n\n  return (\n    <div className=\"student-login-container\">\n      <div className=\"student-login-form\">\n        <h2>Student Login</h2>\n        {success && <div className=\"success-message\">{success}</div>}\n        {error && <div className=\"error-message\">{error}</div>}\n        <form onSubmit={handleSubmit}>\n          <input\n            type=\"email\"\n            name=\"email\"\n            placeholder=\"Email\"\n            value={studentData.email}\n            onChange={handleChange}\n            required\n          />\n          <input\n            type=\"password\"\n            name=\"password\"\n            placeholder=\"Password\"\n            value={studentData.password}\n            onChange={handleChange}\n            required\n          />\n          <button type=\"submit\">Login</button>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default StudentLogin;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,oBAAoB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE7B,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGN,QAAQ,CAAC;IAC7CO,KAAK,EAAE,EAAE;IACTC,QAAQ,EAAE;EACZ,CAAC,CAAC;EAEF,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACW,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAE1C,MAAMa,YAAY,GAAIC,CAAC,IAAK;IAC1B,MAAM;MAAEC,IAAI;MAAEC;IAAM,CAAC,GAAGF,CAAC,CAACG,MAAM;IAChCX,cAAc,CAAEY,QAAQ,KAAM;MAC5B,GAAGA,QAAQ;MACX,CAACH,IAAI,GAAGC;IACV,CAAC,CAAC,CAAC;EACL,CAAC;EAED,MAAMG,YAAY,GAAIL,CAAC,IAAK;IAC1BA,CAAC,CAACM,cAAc,CAAC,CAAC;IAClB;IACA,IAAIf,WAAW,CAACE,KAAK,KAAK,qBAAqB,IAAIF,WAAW,CAACG,QAAQ,KAAK,YAAY,EAAE;MACxFI,UAAU,CAAC,mBAAmB,CAAC;MAC/B;MACA;IACF,CAAC,MAAM;MACLF,QAAQ,CAAC,2BAA2B,CAAC;IACvC;EACF,CAAC;EAED,oBACER,OAAA;IAAKmB,SAAS,EAAC,yBAAyB;IAAAC,QAAA,eACtCpB,OAAA;MAAKmB,SAAS,EAAC,oBAAoB;MAAAC,QAAA,gBACjCpB,OAAA;QAAAoB,QAAA,EAAI;MAAa;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EACrBf,OAAO,iBAAIT,OAAA;QAAKmB,SAAS,EAAC,iBAAiB;QAAAC,QAAA,EAAEX;MAAO;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,EAC3DjB,KAAK,iBAAIP,OAAA;QAAKmB,SAAS,EAAC,eAAe;QAAAC,QAAA,EAAEb;MAAK;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eACtDxB,OAAA;QAAMyB,QAAQ,EAAER,YAAa;QAAAG,QAAA,gBAC3BpB,OAAA;UACE0B,IAAI,EAAC,OAAO;UACZb,IAAI,EAAC,OAAO;UACZc,WAAW,EAAC,OAAO;UACnBb,KAAK,EAAEX,WAAW,CAACE,KAAM;UACzBuB,QAAQ,EAAEjB,YAAa;UACvBkB,QAAQ;QAAA;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACT,CAAC,eACFxB,OAAA;UACE0B,IAAI,EAAC,UAAU;UACfb,IAAI,EAAC,UAAU;UACfc,WAAW,EAAC,UAAU;UACtBb,KAAK,EAAEX,WAAW,CAACG,QAAS;UAC5BsB,QAAQ,EAAEjB,YAAa;UACvBkB,QAAQ;QAAA;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACT,CAAC,eACFxB,OAAA;UAAQ0B,IAAI,EAAC,QAAQ;UAAAN,QAAA,EAAC;QAAK;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACtB,EAAA,CAzDID,YAAY;AAAA6B,EAAA,GAAZ7B,YAAY;AA2DlB,eAAeA,YAAY;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}