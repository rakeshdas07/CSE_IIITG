{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Manish Nath\\\\Documents\\\\GitHub\\\\HSU shop\\\\CSE_IIITG\\\\FrontEnd\\\\src\\\\components\\\\StudentDashboard\\\\Calendar.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './calendar.css'; // Ensure you have custom styling for the calendar\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Calendar = () => {\n  _s();\n  const daysOfWeek = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\n\n  // State for the current month and year\n  const [currentDate, setCurrentDate] = useState(new Date());\n\n  // Function to generate the calendar based on current month and year\n  const generateCalendar = () => {\n    const currentMonth = currentDate.getMonth(); // Get the current month (0-11)\n    const currentYear = currentDate.getFullYear(); // Get the current year\n\n    // Get the first day of the month (0 = Sunday, 6 = Saturday)\n    const firstDayOfMonth = new Date(currentYear, currentMonth, 1).getDay();\n\n    // Get the number of days in the current month\n    const totalDaysInMonth = new Date(currentYear, currentMonth + 1, 0).getDate();\n\n    // Create an array with empty slots before the 1st day of the month\n    let days = [];\n    for (let i = 0; i < firstDayOfMonth; i++) {\n      days.push(null); // Empty slots before the first day\n    }\n\n    // Fill the calendar with actual dates\n    for (let i = 1; i <= totalDaysInMonth; i++) {\n      days.push(i);\n    }\n    return days;\n  };\n\n  // Get the month name and year\n  const currentMonthName = currentDate.toLocaleString('default', {\n    month: 'long'\n  });\n  const currentYear = currentDate.getFullYear();\n\n  // Calendar days\n  const calendarDays = generateCalendar();\n\n  // Functions to navigate between months\n  const goToPreviousMonth = () => {\n    setCurrentDate(new Date(currentDate.getFullYear(), currentDate.getMonth() - 1, 1));\n  };\n  const goToNextMonth = () => {\n    setCurrentDate(new Date(currentDate.getFullYear(), currentDate.getMonth() + 1, 1));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"calendar-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"calendar-header\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"calendar-month-year\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"prev-btn\",\n          onClick: goToPreviousMonth,\n          children: \"Prev\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"month\",\n          children: currentMonthName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"year\",\n          children: currentYear\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"next-btn\",\n          onClick: goToNextMonth,\n          children: \"Next\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"calendar-day-header\",\n      children: daysOfWeek.map((day, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"calendar-day\",\n        children: day\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"calendar-body\",\n      children: calendarDays.map((day, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `calendar-cell ${day ? '' : 'empty'}`,\n        children: day || ''\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n_s(Calendar, \"jlRD8Xn8VFdQnzpYmYXrLX8M9Sw=\");\n_c = Calendar;\nexport default Calendar;\nvar _c;\n$RefreshReg$(_c, \"Calendar\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Calendar","_s","daysOfWeek","currentDate","setCurrentDate","Date","generateCalendar","currentMonth","getMonth","currentYear","getFullYear","firstDayOfMonth","getDay","totalDaysInMonth","getDate","days","i","push","currentMonthName","toLocaleString","month","calendarDays","goToPreviousMonth","goToNextMonth","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","map","day","index","_c","$RefreshReg$"],"sources":["C:/Users/Manish Nath/Documents/GitHub/HSU shop/CSE_IIITG/FrontEnd/src/components/StudentDashboard/Calendar.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './calendar.css'; // Ensure you have custom styling for the calendar\r\n\r\nconst Calendar = () => {\r\n  const daysOfWeek = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\r\n\r\n  // State for the current month and year\r\n  const [currentDate, setCurrentDate] = useState(new Date());\r\n\r\n  // Function to generate the calendar based on current month and year\r\n  const generateCalendar = () => {\r\n    const currentMonth = currentDate.getMonth(); // Get the current month (0-11)\r\n    const currentYear = currentDate.getFullYear(); // Get the current year\r\n\r\n    // Get the first day of the month (0 = Sunday, 6 = Saturday)\r\n    const firstDayOfMonth = new Date(currentYear, currentMonth, 1).getDay();\r\n\r\n    // Get the number of days in the current month\r\n    const totalDaysInMonth = new Date(currentYear, currentMonth + 1, 0).getDate();\r\n\r\n    // Create an array with empty slots before the 1st day of the month\r\n    let days = [];\r\n    for (let i = 0; i < firstDayOfMonth; i++) {\r\n      days.push(null); // Empty slots before the first day\r\n    }\r\n\r\n    // Fill the calendar with actual dates\r\n    for (let i = 1; i <= totalDaysInMonth; i++) {\r\n      days.push(i);\r\n    }\r\n\r\n    return days;\r\n  };\r\n\r\n  // Get the month name and year\r\n  const currentMonthName = currentDate.toLocaleString('default', { month: 'long' });\r\n  const currentYear = currentDate.getFullYear();\r\n\r\n  // Calendar days\r\n  const calendarDays = generateCalendar();\r\n\r\n  // Functions to navigate between months\r\n  const goToPreviousMonth = () => {\r\n    setCurrentDate(new Date(currentDate.getFullYear(), currentDate.getMonth() - 1, 1));\r\n  };\r\n\r\n  const goToNextMonth = () => {\r\n    setCurrentDate(new Date(currentDate.getFullYear(), currentDate.getMonth() + 1, 1));\r\n  };\r\n\r\n  return (\r\n    <div className=\"calendar-container\">\r\n      {/* Month and Year Header */}\r\n      <div className=\"calendar-header\">\r\n        <div className=\"calendar-month-year\">\r\n          <button className=\"prev-btn\" onClick={goToPreviousMonth}>Prev</button>\r\n          <span className=\"month\">{currentMonthName}</span>\r\n          <span className=\"year\">{currentYear}</span>\r\n          <button className=\"next-btn\" onClick={goToNextMonth}>Next</button>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Weekdays Header */}\r\n      <div className=\"calendar-day-header\">\r\n        {daysOfWeek.map((day, index) => (\r\n          <div key={index} className=\"calendar-day\">\r\n            {day}\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      {/* Calendar Body */}\r\n      <div className=\"calendar-body\">\r\n        {calendarDays.map((day, index) => (\r\n          <div key={index} className={`calendar-cell ${day ? '' : 'empty'}`}>\r\n            {day || ''}\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Calendar;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}