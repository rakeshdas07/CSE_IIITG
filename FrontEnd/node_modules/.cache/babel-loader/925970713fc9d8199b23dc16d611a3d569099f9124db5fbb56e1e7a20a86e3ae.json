{"ast":null,"code":"var _jsxFileName = \"/home/nish/Documents/GitHub/CSE_IIITG/FrontEnd/src/components/StudentDashboard/Login.js\",\n  _s = $RefreshSig$();\n// src/components/StudentDashboard/Login.js\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useAuthContext } from '../../context/authContext';\nimport './Login.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [showPassword, setShowPassword] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const {\n    dispatch\n  } = useAuthContext();\n  const navigator = useNavigate();\n  var json = '';\n  const togglePasswordVisibility = () => {\n    setShowPassword(!showPassword);\n  };\n  notify('You have successfully logged in!');\n  const handleLogin = async e => {\n    e.preventDefault();\n    const login = {\n      email,\n      password\n    };\n    setLoading(true);\n    const response = await fetch('https://hsu-store-backend.vercel.app/api/users/login', {\n      method: 'POST',\n      body: JSON.stringify(login),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    setLoading(false);\n    json = await response.json();\n    notify(json, 'You have successfully logged in!');\n    if (!response) {\n      try {\n        console.log(json);\n      } catch (e) {\n        throw new Error(e);\n      }\n    }\n    if (response.ok) {\n      try {\n        localStorage.setItem('user', JSON.stringify(json));\n        dispatch({\n          type: 'LOGIN',\n          payload: json\n        });\n        setEmail('');\n        setPassword('');\n        navigator('/');\n      } catch (e) {\n        throw new Error(e);\n      }\n    }\n  };\n\n  /*const [studentData, setStudentData] = useState({\n    email: '',\n    password: '',\n  });\n   const [error, setError] = useState('');\n  const [success, setSuccess] = useState('');\n   const { login } = useAuthContext();  // Get the login function from AuthContext\n  const navigate = useNavigate();  // Initialize the navigate function\n   const handleChange = (e) => {\n    const { name, value } = e.target;\n    setStudentData((prevData) => ({\n      ...prevData,\n      [name]: value,\n    }));\n  };\n   const handleSubmit = (e) => {\n    e.preventDefault();\n    setError('');  // Reset error message before submission\n    setSuccess('');  // Reset success message before submission\n     // Dummy data for student login\n    const dummyData = {\n      email: 'student@example.com',\n      password: 'student123',\n    };\n     // Check login credentials against the dummy data\n    if (studentData.email === dummyData.email && studentData.password === dummyData.password) {\n      setSuccess('Login Successful!');\n      login({ email: studentData.email });  // Update the user data in AuthContext\n      navigate('/student-dashboard');  // Redirect to Student Dashboard\n    } else {\n      setError('INVALID EMAIL OR PASSWORD !');\n    }\n  };\n  */\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Student Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), success && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"success-message\",\n        children: success\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 21\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-message\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          name: \"email\",\n          placeholder: \"Email\",\n          value: studentData.email,\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          name: \"password\",\n          placeholder: \"Password\",\n          value: studentData.password,\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"F92s1Vn/byhfVJK0V3d6Eip3yHg=\", false, function () {\n  return [useAuthContext, useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useNavigate","useAuthContext","jsxDEV","_jsxDEV","Login","_s","email","setEmail","password","setPassword","showPassword","setShowPassword","loading","setLoading","dispatch","navigator","json","togglePasswordVisibility","notify","handleLogin","e","preventDefault","login","response","fetch","method","body","JSON","stringify","headers","console","log","Error","ok","localStorage","setItem","type","payload","className","children","fileName","_jsxFileName","lineNumber","columnNumber","success","error","onSubmit","handleSubmit","name","placeholder","value","studentData","onChange","handleChange","required","_c","$RefreshReg$"],"sources":["/home/nish/Documents/GitHub/CSE_IIITG/FrontEnd/src/components/StudentDashboard/Login.js"],"sourcesContent":["// src/components/StudentDashboard/Login.js\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useAuthContext } from '../../context/authContext'; \nimport './Login.css';  \n\n\n\nconst Login = () => {\n\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [showPassword, setShowPassword] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const { dispatch } = useAuthContext()\n  const navigator = useNavigate()\n  var json = ''\n\n  const togglePasswordVisibility = () => {\n      setShowPassword(!showPassword);\n  };\n\n  notify('You have successfully logged in!')\n\n  const handleLogin = async (e) => {\n  \n      e.preventDefault()\n  \n      const login = {email, password}\n      setLoading(true)\n      const response = await fetch('https://hsu-store-backend.vercel.app/api/users/login', {\n  \n        method: 'POST',\n        body: JSON.stringify(login),\n        headers : {\n          'Content-Type': 'application/json'\n        }\n      })\n\n      setLoading(false)\n      json = await response.json()\n      notify(json, 'You have successfully logged in!')\n\n      if(!response) {\n        try {\n          console.log(json)\n        } catch(e) {\n          throw new Error(e)\n        }\n      }\n\n      if(response.ok) {\n        try {\n          localStorage.setItem('user', JSON.stringify(json))\n          dispatch({type: 'LOGIN', payload: json})\n          setEmail('')\n          setPassword('')\n          navigator('/')\n        } catch(e) {\n          throw new Error(e)\n        }\n      }\n    }\n\n  /*const [studentData, setStudentData] = useState({\n    email: '',\n    password: '',\n  });\n\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState('');\n\n  const { login } = useAuthContext();  // Get the login function from AuthContext\n  const navigate = useNavigate();  // Initialize the navigate function\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setStudentData((prevData) => ({\n      ...prevData,\n      [name]: value,\n    }));\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    setError('');  // Reset error message before submission\n    setSuccess('');  // Reset success message before submission\n\n    // Dummy data for student login\n    const dummyData = {\n      email: 'student@example.com',\n      password: 'student123',\n    };\n\n    // Check login credentials against the dummy data\n    if (studentData.email === dummyData.email && studentData.password === dummyData.password) {\n      setSuccess('Login Successful!');\n      login({ email: studentData.email });  // Update the user data in AuthContext\n      navigate('/student-dashboard');  // Redirect to Student Dashboard\n    } else {\n      setError('INVALID EMAIL OR PASSWORD !');\n    }\n  };\n*/\n  return (\n    <div className=\"login-container\">\n      <div className=\"login-form\">\n        <h2>Student Login</h2>\n        {success && <div className=\"success-message\">{success}</div>}\n        {error && <div className=\"error-message\">{error}</div>}\n        <form onSubmit={handleSubmit}>\n          <input\n            type=\"email\"\n            name=\"email\"\n            placeholder=\"Email\"\n            value={studentData.email}\n            onChange={handleChange}\n            required\n          />\n          <input\n            type=\"password\"\n            name=\"password\"\n            placeholder=\"Password\"\n            value={studentData.password}\n            onChange={handleChange}\n            required\n          />\n          <button type=\"submit\">Login</button>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default Login;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}